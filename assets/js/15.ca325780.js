(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{370:function(l,t,e){"use strict";e.r(t);var r=e(45),v=Object(r.a)({},(function(){var l=this,t=l.$createElement,e=l._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("h2",{attrs:{id:"rxjs的核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rxjs的核心概念"}},[l._v("#")]),l._v(" RxJS的核心概念")]),l._v(" "),e("ul",[e("li",[e("p",[l._v("Observable 可观察的物件")]),l._v(" "),e("ul",[e("li",[l._v("代表一组未来即将产生的事件资料（被观察的物件）")])])]),l._v(" "),e("li",[e("p",[l._v("Observer 观察者物件")]),l._v(" "),e("ul",[e("li",[l._v("代表一个用来接收【观察结果】的物件（收到的就是事件资料）")]),l._v(" "),e("li",[l._v("观察者物件就是一个物件包含3个含有callback函数的属性（next，error，complete）")])])]),l._v(" "),e("li",[e("p",[l._v("Subscription 订阅物件")]),l._v(" "),e("ul",[e("li",[l._v("代表正在执行Observable/Observer的执行个体（可用来来取消订阅）")])])]),l._v(" "),e("li",[e("p",[l._v("Operrators 操作者(运算子)")]),l._v(" "),e("ul",[e("li",[l._v("必须拥有函数编程中所定义的纯函数（pure funtion）特性（没有副作用的函数式）")]),l._v(" "),e("li",[l._v("主要用来处理一系列的事件资料集合")]),l._v(" "),e("li",[l._v("常见的运算子包含 map、filter、concat、flatMap 等")])])])])])}),[],!1,null,null,null);t.default=v.exports}}]);